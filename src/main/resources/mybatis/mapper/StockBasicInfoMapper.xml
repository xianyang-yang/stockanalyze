<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="stock.dao.interfaces.StockBasicInfoMapper" >
  <resultMap id="BaseResultMap" type="StockBasicInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pe_radio" property="peRadio" jdbcType="DECIMAL" />
    <result column="pb_radio" property="pbRadio" jdbcType="DECIMAL" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="list_date" property="listDate" jdbcType="DATE" />
    <result column="issue_price" property="issuePrice" jdbcType="DECIMAL" />
    <result column="first_open_price" property="firstOpenPrice" jdbcType="DECIMAL" />
    <result column="total_value" property="totalValue" jdbcType="DECIMAL" />
    <result column="circulation_market_value" property="circulationMarketValue" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, pe_radio, pb_radio, industry, list_date, issue_price, first_open_price,
    total_value, circulation_market_value
  </sql>
  <select id="findByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from stock_basic_info
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <select id="listAllStockCodes" resultType="java.lang.String">
    select code from stock_basic_info order by code limit #{offset},#{limit}
  </select>
  <delete id="deleteByCode" parameterType="java.lang.String" >
    delete from stock_basic_info
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="save" parameterType="StockBasicInfo" >
    insert into stock_basic_info (id, code, name, 
      pe_radio, pb_radio, industry,
      list_date, issue_price, first_open_price, 
      total_value, circulation_market_value)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{peRadio,jdbcType=DECIMAL}, #{pbRadio,jdbcType=DECIMAL}, #{industry,jdbcType=VARCHAR},
      #{listDate,jdbcType=DATE}, #{issuePrice,jdbcType=DECIMAL}, #{firstOpenPrice,jdbcType=DECIMAL}, 
      #{totalValue,jdbcType=BIGINT}, #{circulationMarketValue,jdbcType=BIGINT})
  </insert>

    <insert id="saveOrUpdate" parameterType="StockBasicInfo" >
    replace into stock_basic_info (id, code, name,
      pe_radio, pb_radio, industry,
      list_date, issue_price, first_open_price,
      total_value, circulation_market_value)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{peRadio,jdbcType=DECIMAL}, #{pbRadio,jdbcType=DECIMAL}, #{industry,jdbcType=VARCHAR},
      #{listDate,jdbcType=DATE}, #{issuePrice,jdbcType=DECIMAL}, #{firstOpenPrice,jdbcType=DECIMAL},
      #{totalValue,jdbcType=BIGINT}, #{circulationMarketValue,jdbcType=BIGINT})
  </insert>

  <insert id="batchSave" parameterType="StockBasicInfo" >
    insert into stock_basic_info (id, code, name,
      pe_radio, pb_radio, industry,
      list_date, issue_price, first_open_price,
      total_value, circulation_market_value)
    values
    <foreach item="item" collection="list" separator=",">
      <![CDATA[
         (#{item.id,jdbcType=BIGINT}, #{item.code,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
          #{item.peRadio,jdbcType=DECIMAL}, #{item.pbRadio,jdbcType=DECIMAL}, #{item.industry,jdbcType=VARCHAR},
          #{item.listDate,jdbcType=DATE}, #{item.issuePrice,jdbcType=DECIMAL}, #{item.firstOpenPrice,jdbcType=DECIMAL},
          #{item.totalValue,jdbcType=BIGINT}, #{item.circulationMarketValue,jdbcType=BIGINT})
	    ]]>
    </foreach>
  </insert>


  <update id="updateSelectiveByCode" parameterType="StockBasicInfo" >
    update stock_basic_info
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="peRadio != null" >
        pe_radio = #{peRadio,jdbcType=DECIMAL},
      </if>
      <if test="pbRadio != null" >
        pb_radio = #{pbRadio,jdbcType=DECIMAL},
      </if>
      <if test="industry != null" >
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="listDate != null" >
        list_date = #{listDate,jdbcType=DATE},
      </if>
      <if test="issuePrice != null" >
        issue_price = #{issuePrice,jdbcType=DECIMAL},
      </if>
      <if test="firstOpenPrice != null" >
        first_open_price = #{firstOpenPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalValue != null" >
        total_value = #{totalValue,jdbcType=DECIMAL},
      </if>
      <if test="circulationMarketValue != null" >
        circulation_market_value = #{circulationMarketValue,jdbcType=DECIMAL},
      </if>
    </set>
    where  code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>